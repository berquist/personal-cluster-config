---
- name: copy over SLURM config
  hosts:
    - submit
    - compute
    - controller
  gather_facts: no
  vars_files:
    - common_variables.yaml

  tasks:
    - name: ensure destination dir exists
      file:
        path: "{{ slurm_conf_dest_dir }}"
        state: directory
        owner: "{{ main_conf_owner }}"
        group: "{{ main_conf_group }}"
    - name: copy slurm.conf
      copy:
        src: "{{ slurm_conf_source_dir }}/slurm.conf"
        dest: "{{ slurm_conf_dest_dir }}"
        owner: "{{ main_conf_owner }}"
        group: "{{ main_conf_group }}"
        mode: "0444"
      notify:
        # This won't work for certain parameters that require actual
        # restarting of the daemons.
        #
        # - restart slurmd
        # - restart slurmctld
        - issue reconfigure command
    - name: generate gres.conf
      shell: |
        set -euo pipefail
        x=0
        for i in $(nvidia-smi -L | awk -F: '{ print tolower($2) }' | \
        sed -e 's/^ geforce//g' -e 's/ //g' -e 's/(.*$//g')
        do
          echo "Name=gpu Type=$i File=/dev/nvidia$((x++))"
        done > {{ slurm_conf_dest_dir }}/gres.conf
        chmod 0444 {{ slurm_conf_dest_dir }}/gres.conf
      when: inventory_hostname in groups['compute']
      register: res_gres_conf
      args:
        executable: /bin/bash
    - name: copy cgroup.conf
      copy:
        src: "{{ slurm_conf_source_dir }}/cgroup.conf"
        dest: "{{ slurm_conf_dest_dir }}"
        owner: "{{ main_conf_owner }}"
        group: "{{ main_conf_group }}"
        mode: "0444"
      when: inventory_hostname not in groups['submit']
      notify:
        # - restart slurmd
        # - restart slurmctld
        - issue reconfigure command
    - name: copy prolog
      copy:
        src: "{{ slurm_conf_source_dir }}/prolog"
        dest: "{{ slurm_conf_dest_dir }}"
        owner: "{{ main_conf_owner }}"
        group: "{{ main_conf_group }}"
        mode: "0755"
      # TODO when?
    - name: copy task_prolog
      copy:
        src: "{{ slurm_conf_source_dir }}/task_prolog"
        dest: "{{ slurm_conf_dest_dir }}"
        owner: "{{ main_conf_owner }}"
        group: "{{ main_conf_group }}"
        mode: "0755"
      when: inventory_hostname in groups['compute']

  handlers:
    - name: restart slurmd
      service:
        name: slurmd
        state: restarted
    - name: restart slurmctld
      service:
        name: slurmctld
        state: restarted
    - name: issue reconfigure command
      command: scontrol reconfigure

- name: copy over SLURM DB config
  hosts: db
  vars_files:
    - common_variables.yaml

  tasks:
    - name: ensure destination dir exists
      file:
        path: "{{ slurm_conf_dest_dir }}"
        state: directory
        owner: "{{ main_conf_owner }}"
        group: "{{ main_conf_group }}"
    - name: copy slurmdbd.conf
      copy:
        src: "{{ slurm_conf_source_dir }}/slurmdbd.conf"
        dest: "{{ slurm_conf_dest_dir }}"
        owner: slurm
        group: slurm
        mode: '0400'
      notify:
        # - restart slurmdbd
        - issue DB reconfigure command

  handlers:
    - name: restart slurmdbd
      service:
        name: slurmdbd
        state: restarted
    - name: issue DB reconfigure command
      command: sacctmgr reconfigure
